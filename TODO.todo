Libs:
    io-router: 
        - : https://github.com/tdzienniak/io-router/
        - Uses object based routing -> first arg : config -> route-prefix...
        - Uses nested objects for routing
        - Interesting init call with the socket -> https://github.com/tdzienniak/io-router/blob/master/src/index.js
        - Supports rerouting with merged .route object
        - Gets request ( modified socket ) as a route param.

    iosync:
        - : https://github.com/mahdCompany/iosync
        - More of a sync library -> Include functionality in the srocket lib to make sync easy with

    ternion:
        - : https://github.com/michael-kamel/ternion
        - Includes validation
        - Supplied data, and response object, express like.
		- Has wired syntax!

    socketnet:
        - : https://github.com/leon3s/socknet
        - Good docs : http://socknet.io/
        - Object based routing allows for easy code splitting.
        - Has a lifecycle built-in ( before, on, after hooks )
        - Objects can be registered via socket.on(eventObject)
        - Built in sessions.
        - Has some sort of Validation via ArgTypes ?
        - Overall a good quality library.

    Socket.io-Wildcard:
        - : https://github.com/hden/socketio-wildcard
        - Example of a simple middleware
TODOS:
	Folder Structure:
		✔ Setup relative imports @done(18-02-15 14:18)

Unrelated:
	☐ Disqus in docs ?
    Loggers:
        - https://www.npmjs.com/package/socketio-winston-logger

Features for srocket:
	✔ Express like drequest and response objects. @done(18-02-14 16:37)
	☐ Namespace handling
    ☐ Middlewares
    ✔ Validation @done(18-02-14 16:37)
    ☐ Easy dSynchronisation
    ☐ Wildcard Event -> Request placeholders -> Expose connection-disconnection... events.
    ☐ Routing -> With controllers ? ( Express like req, res objects ? )
	☐ Redis integration?
	✔ Laravel like ( validation ) error system @done(18-02-16 23:12)
	✔ SRocket expose internal config. @done(18-02-15 16:23)
	☐ Implement all of these validation rules : https://laravel.com/docs/5.5/validation#available-validation-rules
	✔ SRocket - Config builder @done(18-02-16 23:29)
	☐ Find a way to have model files and have models assotiated with rules
	☐ Move from rulename to ruleType?

Impementation Details:
	✔ Implement routing like socknet @done(18-02-14 16:38)
	☐ Maybe use socket.io middlewares ?
	☐ Make request generic to the data that is in it -> Remove the data object and move data into the request ( instead of the response ) -> Models
	✔ Improve validation failureMessage. @done(18-02-16 23:11)
	☐ Typesafe validations ? -> validations: { notNull: true, notEmpty: true }
	☐ Allow for alternative validation methods -> Support models with something like the 'class-validator' package

Tests:
	☐ Add tests :)

Design:
	☐ Should Routes have a lifecycle ( class-based ) or just be methods ?
		- Classes allow for endless nested routes.
		- Functions are less verbose and have a cleaner look