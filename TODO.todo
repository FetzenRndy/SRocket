Libs:
    io-router: 
        - : https://github.com/tdzienniak/io-router/
        - Uses object based routing -> first arg : config -> route-prefix...
        - Uses nested objects for routing
        - Interesting init call with the socket -> https://github.com/tdzienniak/io-router/blob/master/src/index.js
        - Supports rerouting with merged .route object
        - Gets request ( modified socket ) as a route param.

    iosync:
        - : https://github.com/mahdCompany/iosync
        - More of a sync library -> Include functionality in the srocket lib to make sync easy with

    ternion:
        - : https://github.com/michael-kamel/ternion
        - Include validation -> Include validation in the srocket.
        - Supplied data, and response object, express like.
		- Has wired syntax

    socketnet:
        - : https://github.com/leon3s/socknet
        - Good docs : http://socknet.io/
        - Object based routing allows for easy code splitting.
        - Has a lifecycle built-in ( before, on, after hooks )
        - Objects can be registered via socket.on(eventObject)
        - Built in sessions.
        - Has some sort of Validation via ArgTypes ?
        - Overall a good quality library.

    Socket.io-Wildcard:
        - : https://github.com/hden/socketio-wildcard
        - Example of a simple middleware
        - Provides a Wildcard event that responds to all events.

Unrelated:
    Loggers:
        - https://www.npmjs.com/package/socketio-winston-logger

Features for srocket:
	✔ Express like drequest and response objects. @done(18-02-14 16:37)
	☐ Namespace handling
    ☐ Middlewares
    ✔ Validation @done(18-02-14 16:37)
    ☐ Synchronisation
    ☐ Wildcard Event -> Request placeholders -> Expose connection-disconnection... events.
    ☐ Routing -> With controllers ? ( Express like req, res objects ? )
	☐ Redis integration?
	☐ Laravel like (validation-) error system
	☐ SRocket expose internal config.
	
Impementation Details:
	✔ Implement routing like socknet @done(18-02-14 16:38)
	☐ More Tests
	☐ Maybe use socket.io middlewares ?

Design:
	☐ Should Routes have a lifecycle ( class-based ) or just be methods ?
		- Classes allow for endless nested routes.
		- Functions are less verbose and have a cleaner look