Features:
	☐ Better defaults for error handling.
	☐ Handle rooms better.

	ErrorHandling:
		☐ Let user choose if they want error handling -> Set default in ExecContext and conditional toogle in decorator

	Client-Server Interfaces:
		☐ Implement
		☐ Hubs ?
		☐ Custom client.

	Components / Services:
		☐ Make container instance based.
		☐ Expose via DI container
		☐ Added via module config field.

	Controllers:
		☐ NESTED Routes @low
		☐ Can implement a Client-Server interface. -> Generics ?

	Middleware:
		☐ Stick with curren approach ? Or let middleware set "before", or "after" property and priority?
		☐ What should the behaviour be when errors occour ?
	
	Routes:
		☐ What should the behaviour be on errors ? @OnError decorator ? Middleware ?

	Routes:
		Validation:
			☐ Do not include packages for validation methods! @critical 
			Options:
				☐ ModelState -> Asp.net like -> Models.
				☐ Inline -> req.context.validation
				☐ Validation middleware.
				☐ Decorator based.
		☐ Add jsV schema validator back.
		☐ Add validation middlewares -> IMiddlewarable ? @critical 
		☐ Route result: IActionResult -> Asp.net like
		☐ Request and Response objects ? Or one context like object.
		☐ Parameter like injections ?
	
	Proposals:
		☐ Modules
		☐ Models.

Docs:
	☐ REWRITE FOR 2.0! @high 
	☐ Acks
	☐ Write a section for recomended configs -> tsconfig - tslint...

Implementation Details:
	☐ Integrate socket.io middlewares ?