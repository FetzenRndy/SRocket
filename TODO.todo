Features:
	ErrorHandling:
		☐ Let user choose if they want error handling -> Set default in ExecContext and conditional toogle in decorator
		☐ What should the behaviour be on errors ? @OnError decorator ? Middleware ?

	Client-Server Interfaces:
		☐ Implement
		☐ Hubs ?
		☐ Custom client.

	Components / Services:
		☐ Make container instance based.
		☐ Expose via DI container
		☐ Added via module config field.

	Controllers:
		☐ NESTED Routes @low
		☐ Can implement a Client-Server interface. -> Generics ?

	Middleware:
		☐ Stick with current approach ? Or let middleware set "before", or "after" property and priority?

	Validation:
		☐ Do not include packages for validation methods! @critical 
		Options:
			☐ ModelState -> Asp.net like -> Models.
			☐ Inline -> req.context.validation
			☐ Validation middleware.
			☐ Decorator based.
		☐ Add jsV schema validator back.
		☐ Route result: IActionResult -> Asp.net like
		☐ Request and Response objects ? Or one context like object.
		☐ Parameter like injections ?
	
	Proposals:
		☐ Modules
		☐ Models.

	Builtins:
		☐ Room managment ?

Docs:
	☐ REWRITE FOR 2.0! @high 
	☐ Acks
	☐ Write a section for recomended configs -> tsconfig - tslint...

Implementation Details:
	☐ Integrate socket.io middlewares ?